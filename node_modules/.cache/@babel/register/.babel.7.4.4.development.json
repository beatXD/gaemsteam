{
  "{\"sourceRoot\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"filename\":\"/Users/panupong/Documents/GitHub/gaemsteam/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/panupong/Documents/GitHub/gaemsteam",
      "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _game = _interopRequireDefault(require(\"./game\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// const tags = [];\nvar getid = function getid() {\n  var idsplit = _game[\"default\"][1].link;\n  var id = \"\".concat(idsplit.split('/')[4]);\n  return id;\n};\n\nconsole.log(getid());\n\nvar gethost = function gethost() {\n  var hostsplit = _game[\"default\"][1].image;\n  var host = \"\".concat(hostsplit.split('/')[3]);\n  return host;\n};\n\nconsole.log(gethost());\n\nvar getname = function getname() {\n  return _game[\"default\"][1].name;\n};\n\nconsole.log(getname());\n\nvar getdiscount = function getdiscount() {\n  var discountslit = _game[\"default\"][1].title;\n  var discount = \"\".concat(discountslit.slice(5, 8));\n  return discount;\n};\n\nconsole.log(getdiscount());\n\nvar geturl = function geturl() {\n  return _game[\"default\"][1].link;\n};\n\nconsole.log(geturl());\n\nvar getimage = function getimage() {\n  return _game[\"default\"][1].image;\n};\n\nconsole.log(getimage());\n\nvar getupdatetime = function getupdatetime() {\n  var time = new Date().toISOString();\n  return time;\n};\n\nconsole.log(getupdatetime());\n\nvar creatobj = function creatobj() {\n  var gameobj = {\n    id: getid(),\n    host: gethost(),\n    url: geturl(),\n    name: getname(),\n    discount_percent: getdiscount(),\n    image: getimage(),\n    update_at: getupdatetime()\n  };\n  return gameobj;\n};\n\nconsole.log(creatobj()); // for (let i = 0; i < game.length; i += 1) {\n//   tags = tags.concat(game[i].tags);\n// }\n// const newArrtags = [...new Set(tags)];\n// newArrtags.forEach((element) => {\n//   const filter = game.filter(user => user.tags.includes(element));\n//   const result = { ID: id, Date: time, ...filter };\n//   const data = JSON.stringify(result, null, 2);\n//   fs.writeFile(`gametag/${element}.json`, (''), (err) => {\n//     if (err) throw err;\n//   });\n// });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldGlkIiwiaWRzcGxpdCIsImdhbWUiLCJsaW5rIiwiaWQiLCJzcGxpdCIsImNvbnNvbGUiLCJsb2ciLCJnZXRob3N0IiwiaG9zdHNwbGl0IiwiaW1hZ2UiLCJob3N0IiwiZ2V0bmFtZSIsIm5hbWUiLCJnZXRkaXNjb3VudCIsImRpc2NvdW50c2xpdCIsInRpdGxlIiwiZGlzY291bnQiLCJzbGljZSIsImdldHVybCIsImdldGltYWdlIiwiZ2V0dXBkYXRldGltZSIsInRpbWUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjcmVhdG9iaiIsImdhbWVvYmoiLCJ1cmwiLCJkaXNjb3VudF9wZXJjZW50IiwidXBkYXRlX2F0Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUE7QUFFQSxJQUFNQSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ2xCLE1BQU1DLE9BQU8sR0FBSUMsaUJBQUssQ0FBTCxFQUFRQyxJQUF6QjtBQUNBLE1BQU1DLEVBQUUsYUFBTUgsT0FBTyxDQUFDSSxLQUFSLENBQWMsR0FBZCxFQUFtQixDQUFuQixDQUFOLENBQVI7QUFDQSxTQUFPRCxFQUFQO0FBQ0QsQ0FKRDs7QUFLQUUsT0FBTyxDQUFDQyxHQUFSLENBQVlQLEtBQUssRUFBakI7O0FBRUEsSUFBTVEsT0FBTyxHQUFHLFNBQVZBLE9BQVUsR0FBTTtBQUNwQixNQUFNQyxTQUFTLEdBQUlQLGlCQUFLLENBQUwsRUFBUVEsS0FBM0I7QUFDQSxNQUFNQyxJQUFJLGFBQU1GLFNBQVMsQ0FBQ0osS0FBVixDQUFnQixHQUFoQixFQUFxQixDQUFyQixDQUFOLENBQVY7QUFDQSxTQUFPTSxJQUFQO0FBQ0QsQ0FKRDs7QUFLQUwsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQU8sRUFBbkI7O0FBRUEsSUFBTUksT0FBTyxHQUFHLFNBQVZBLE9BQVU7QUFBQSxTQUFNVixpQkFBSyxDQUFMLEVBQVFXLElBQWQ7QUFBQSxDQUFoQjs7QUFDQVAsT0FBTyxDQUFDQyxHQUFSLENBQVlLLE9BQU8sRUFBbkI7O0FBRUEsSUFBTUUsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBTTtBQUN4QixNQUFNQyxZQUFZLEdBQUliLGlCQUFLLENBQUwsRUFBUWMsS0FBOUI7QUFDQSxNQUFNQyxRQUFRLGFBQU1GLFlBQVksQ0FBQ0csS0FBYixDQUFtQixDQUFuQixFQUFzQixDQUF0QixDQUFOLENBQWQ7QUFDQSxTQUFPRCxRQUFQO0FBQ0QsQ0FKRDs7QUFLQVgsT0FBTyxDQUFDQyxHQUFSLENBQVlPLFdBQVcsRUFBdkI7O0FBRUEsSUFBTUssTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxTQUFNakIsaUJBQUssQ0FBTCxFQUFRQyxJQUFkO0FBQUEsQ0FBZjs7QUFDQUcsT0FBTyxDQUFDQyxHQUFSLENBQVlZLE1BQU0sRUFBbEI7O0FBRUEsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVc7QUFBQSxTQUFNbEIsaUJBQUssQ0FBTCxFQUFRUSxLQUFkO0FBQUEsQ0FBakI7O0FBQ0FKLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYSxRQUFRLEVBQXBCOztBQUVBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsR0FBTTtBQUMxQixNQUFNQyxJQUFJLEdBQUcsSUFBSUMsSUFBSixHQUFXQyxXQUFYLEVBQWI7QUFDQSxTQUFPRixJQUFQO0FBQ0QsQ0FIRDs7QUFJQWhCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZYyxhQUFhLEVBQXpCOztBQUVBLElBQU1JLFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQU07QUFDckIsTUFBTUMsT0FBTyxHQUFHO0FBQ2R0QixJQUFBQSxFQUFFLEVBQUVKLEtBQUssRUFESztBQUVkVyxJQUFBQSxJQUFJLEVBQUVILE9BQU8sRUFGQztBQUdkbUIsSUFBQUEsR0FBRyxFQUFFUixNQUFNLEVBSEc7QUFJZE4sSUFBQUEsSUFBSSxFQUFFRCxPQUFPLEVBSkM7QUFLZGdCLElBQUFBLGdCQUFnQixFQUFFZCxXQUFXLEVBTGY7QUFNZEosSUFBQUEsS0FBSyxFQUFFVSxRQUFRLEVBTkQ7QUFPZFMsSUFBQUEsU0FBUyxFQUFFUixhQUFhO0FBUFYsR0FBaEI7QUFVQSxTQUFPSyxPQUFQO0FBQ0QsQ0FaRDs7QUFhQXBCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZa0IsUUFBUSxFQUFwQixFLENBR0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYW51cG9uZy9Eb2N1bWVudHMvR2l0SHViL2dhZW1zdGVhbSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgZ2FtZSBmcm9tICcuL2dhbWUnO1xuXG4vLyBjb25zdCB0YWdzID0gW107XG5cbmNvbnN0IGdldGlkID0gKCkgPT4ge1xuICBjb25zdCBpZHNwbGl0ID0gKGdhbWVbMV0ubGluayk7XG4gIGNvbnN0IGlkID0gYCR7aWRzcGxpdC5zcGxpdCgnLycpWzRdfWA7XG4gIHJldHVybiBpZDtcbn07XG5jb25zb2xlLmxvZyhnZXRpZCgpKTtcblxuY29uc3QgZ2V0aG9zdCA9ICgpID0+IHtcbiAgY29uc3QgaG9zdHNwbGl0ID0gKGdhbWVbMV0uaW1hZ2UpO1xuICBjb25zdCBob3N0ID0gYCR7aG9zdHNwbGl0LnNwbGl0KCcvJylbM119YDtcbiAgcmV0dXJuIGhvc3Q7XG59O1xuY29uc29sZS5sb2coZ2V0aG9zdCgpKTtcblxuY29uc3QgZ2V0bmFtZSA9ICgpID0+IGdhbWVbMV0ubmFtZTtcbmNvbnNvbGUubG9nKGdldG5hbWUoKSk7XG5cbmNvbnN0IGdldGRpc2NvdW50ID0gKCkgPT4ge1xuICBjb25zdCBkaXNjb3VudHNsaXQgPSAoZ2FtZVsxXS50aXRsZSk7XG4gIGNvbnN0IGRpc2NvdW50ID0gYCR7ZGlzY291bnRzbGl0LnNsaWNlKDUsIDgpfWA7XG4gIHJldHVybiBkaXNjb3VudDtcbn07XG5jb25zb2xlLmxvZyhnZXRkaXNjb3VudCgpKTtcblxuY29uc3QgZ2V0dXJsID0gKCkgPT4gZ2FtZVsxXS5saW5rO1xuY29uc29sZS5sb2coZ2V0dXJsKCkpO1xuXG5jb25zdCBnZXRpbWFnZSA9ICgpID0+IGdhbWVbMV0uaW1hZ2U7XG5jb25zb2xlLmxvZyhnZXRpbWFnZSgpKTtcblxuY29uc3QgZ2V0dXBkYXRldGltZSA9ICgpID0+IHtcbiAgY29uc3QgdGltZSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgcmV0dXJuIHRpbWU7XG59O1xuY29uc29sZS5sb2coZ2V0dXBkYXRldGltZSgpKTtcblxuY29uc3QgY3JlYXRvYmogPSAoKSA9PiB7XG4gIGNvbnN0IGdhbWVvYmogPSB7XG4gICAgaWQ6IGdldGlkKCksXG4gICAgaG9zdDogZ2V0aG9zdCgpLFxuICAgIHVybDogZ2V0dXJsKCksXG4gICAgbmFtZTogZ2V0bmFtZSgpLFxuICAgIGRpc2NvdW50X3BlcmNlbnQ6IGdldGRpc2NvdW50KCksXG4gICAgaW1hZ2U6IGdldGltYWdlKCksXG4gICAgdXBkYXRlX2F0OiBnZXR1cGRhdGV0aW1lKCksXG5cbiAgfTtcbiAgcmV0dXJuIGdhbWVvYmo7XG59O1xuY29uc29sZS5sb2coY3JlYXRvYmooKSk7XG5cblxuLy8gZm9yIChsZXQgaSA9IDA7IGkgPCBnYW1lLmxlbmd0aDsgaSArPSAxKSB7XG4vLyAgIHRhZ3MgPSB0YWdzLmNvbmNhdChnYW1lW2ldLnRhZ3MpO1xuLy8gfVxuLy8gY29uc3QgbmV3QXJydGFncyA9IFsuLi5uZXcgU2V0KHRhZ3MpXTtcblxuLy8gbmV3QXJydGFncy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4vLyAgIGNvbnN0IGZpbHRlciA9IGdhbWUuZmlsdGVyKHVzZXIgPT4gdXNlci50YWdzLmluY2x1ZGVzKGVsZW1lbnQpKTtcbi8vICAgY29uc3QgcmVzdWx0ID0geyBJRDogaWQsIERhdGU6IHRpbWUsIC4uLmZpbHRlciB9O1xuLy8gICBjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkocmVzdWx0LCBudWxsLCAyKTtcblxuLy8gICBmcy53cml0ZUZpbGUoYGdhbWV0YWcvJHtlbGVtZW50fS5qc29uYCwgKCcnKSwgKGVycikgPT4ge1xuLy8gICAgIGlmIChlcnIpIHRocm93IGVycjtcbi8vICAgfSk7XG4vLyB9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getid",
        "idsplit",
        "game",
        "link",
        "id",
        "split",
        "console",
        "log",
        "gethost",
        "hostsplit",
        "image",
        "host",
        "getname",
        "name",
        "getdiscount",
        "discountslit",
        "title",
        "discount",
        "slice",
        "geturl",
        "getimage",
        "getupdatetime",
        "time",
        "Date",
        "toISOString",
        "creatobj",
        "gameobj",
        "url",
        "discount_percent",
        "update_at"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,OAAO,GAAIC,iBAAK,CAAL,EAAQC,IAAzB;AACA,MAAMC,EAAE,aAAMH,OAAO,CAACI,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAN,CAAR;AACA,SAAOD,EAAP;AACD,CAJD;;AAKAE,OAAO,CAACC,GAAR,CAAYP,KAAK,EAAjB;;AAEA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,MAAMC,SAAS,GAAIP,iBAAK,CAAL,EAAQQ,KAA3B;AACA,MAAMC,IAAI,aAAMF,SAAS,CAACJ,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAN,CAAV;AACA,SAAOM,IAAP;AACD,CAJD;;AAKAL,OAAO,CAACC,GAAR,CAAYC,OAAO,EAAnB;;AAEA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMV,iBAAK,CAAL,EAAQW,IAAd;AAAA,CAAhB;;AACAP,OAAO,CAACC,GAAR,CAAYK,OAAO,EAAnB;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAMC,YAAY,GAAIb,iBAAK,CAAL,EAAQc,KAA9B;AACA,MAAMC,QAAQ,aAAMF,YAAY,CAACG,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAN,CAAd;AACA,SAAOD,QAAP;AACD,CAJD;;AAKAX,OAAO,CAACC,GAAR,CAAYO,WAAW,EAAvB;;AAEA,IAAMK,MAAM,GAAG,SAATA,MAAS;AAAA,SAAMjB,iBAAK,CAAL,EAAQC,IAAd;AAAA,CAAf;;AACAG,OAAO,CAACC,GAAR,CAAYY,MAAM,EAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMlB,iBAAK,CAAL,EAAQQ,KAAd;AAAA,CAAjB;;AACAJ,OAAO,CAACC,GAAR,CAAYa,QAAQ,EAApB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,SAAOF,IAAP;AACD,CAHD;;AAIAhB,OAAO,CAACC,GAAR,CAAYc,aAAa,EAAzB;;AAEA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAMC,OAAO,GAAG;AACdtB,IAAAA,EAAE,EAAEJ,KAAK,EADK;AAEdW,IAAAA,IAAI,EAAEH,OAAO,EAFC;AAGdmB,IAAAA,GAAG,EAAER,MAAM,EAHG;AAIdN,IAAAA,IAAI,EAAED,OAAO,EAJC;AAKdgB,IAAAA,gBAAgB,EAAEd,WAAW,EALf;AAMdJ,IAAAA,KAAK,EAAEU,QAAQ,EAND;AAOdS,IAAAA,SAAS,EAAER,aAAa;AAPV,GAAhB;AAUA,SAAOK,OAAP;AACD,CAZD;;AAaApB,OAAO,CAACC,GAAR,CAAYkB,QAAQ,EAApB,E,CAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA",
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourcesContent": [
        "import fs from 'fs';\nimport game from './game';\n\n// const tags = [];\n\nconst getid = () => {\n  const idsplit = (game[1].link);\n  const id = `${idsplit.split('/')[4]}`;\n  return id;\n};\nconsole.log(getid());\n\nconst gethost = () => {\n  const hostsplit = (game[1].image);\n  const host = `${hostsplit.split('/')[3]}`;\n  return host;\n};\nconsole.log(gethost());\n\nconst getname = () => game[1].name;\nconsole.log(getname());\n\nconst getdiscount = () => {\n  const discountslit = (game[1].title);\n  const discount = `${discountslit.slice(5, 8)}`;\n  return discount;\n};\nconsole.log(getdiscount());\n\nconst geturl = () => game[1].link;\nconsole.log(geturl());\n\nconst getimage = () => game[1].image;\nconsole.log(getimage());\n\nconst getupdatetime = () => {\n  const time = new Date().toISOString();\n  return time;\n};\nconsole.log(getupdatetime());\n\nconst creatobj = () => {\n  const gameobj = {\n    id: getid(),\n    host: gethost(),\n    url: geturl(),\n    name: getname(),\n    discount_percent: getdiscount(),\n    image: getimage(),\n    update_at: getupdatetime(),\n\n  };\n  return gameobj;\n};\nconsole.log(creatobj());\n\n\n// for (let i = 0; i < game.length; i += 1) {\n//   tags = tags.concat(game[i].tags);\n// }\n// const newArrtags = [...new Set(tags)];\n\n// newArrtags.forEach((element) => {\n//   const filter = game.filter(user => user.tags.includes(element));\n//   const result = { ID: id, Date: time, ...filter };\n//   const data = JSON.stringify(result, null, 2);\n\n//   fs.writeFile(`gametag/${element}.json`, (''), (err) => {\n//     if (err) throw err;\n//   });\n// });\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557383408742
  }
}