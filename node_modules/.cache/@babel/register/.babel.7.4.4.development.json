{
  "{\"sourceRoot\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"filename\":\"/Users/panupong/Documents/GitHub/gaemsteam/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/panupong/Documents/GitHub/gaemsteam",
      "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _game = _interopRequireDefault(require(\"./game\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar getid = function getid(game) {\n  var idsplit = game.link;\n  var id = \"\".concat(idsplit.split('/')[4]);\n  return id;\n};\n\nvar gethost = function gethost(game) {\n  var hostsplit = game.image;\n  var host = \"\".concat(hostsplit.split('/')[3]);\n  return host;\n};\n\nvar getdiscount = function getdiscount(game) {\n  var discountslit = game.title;\n  var discount = \"\".concat(discountslit.slice(5, 7));\n  return discount;\n};\n\nvar getupdatetime = function getupdatetime() {\n  var time = new Date().toISOString();\n  return time;\n};\n\nvar geturl = function geturl(game) {\n  return game.link;\n};\n\nvar getname = function getname(game) {\n  return game.name;\n};\n\nvar getimage = function getimage(game) {\n  return game.image;\n};\n\nvar creatobj = function creatobj(game) {\n  var gameobj = {\n    id: getid(game),\n    host: gethost(game),\n    url: geturl(game),\n    name: getname(game),\n    discount_percent: getdiscount(game),\n    image: getimage(game),\n    update_at: getupdatetime()\n  };\n  return gameobj;\n}; // console.log(creatobj());\n\n\n_game[\"default\"].forEach(function (game) {\n  var gamelist = creatobj(game);\n  game.tags.forEach(function (tags) {\n    var data = JSON.stringify(gamelist, null, 2);\n\n    _fs[\"default\"].writeFileSync(\"gametag/\".concat(tags, \".json\"), data, function (err) {\n      if (err) throw err;\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldGlkIiwiZ2FtZSIsImlkc3BsaXQiLCJsaW5rIiwiaWQiLCJzcGxpdCIsImdldGhvc3QiLCJob3N0c3BsaXQiLCJpbWFnZSIsImhvc3QiLCJnZXRkaXNjb3VudCIsImRpc2NvdW50c2xpdCIsInRpdGxlIiwiZGlzY291bnQiLCJzbGljZSIsImdldHVwZGF0ZXRpbWUiLCJ0aW1lIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZ2V0dXJsIiwiZ2V0bmFtZSIsIm5hbWUiLCJnZXRpbWFnZSIsImNyZWF0b2JqIiwiZ2FtZW9iaiIsInVybCIsImRpc2NvdW50X3BlcmNlbnQiLCJ1cGRhdGVfYXQiLCJnYW1lSlNPTiIsImZvckVhY2giLCJnYW1lbGlzdCIsInRhZ3MiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsImZzIiwid3JpdGVGaWxlU3luYyIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLEtBQUssR0FBRyxTQUFSQSxLQUFRLENBQUNDLElBQUQsRUFBVTtBQUN0QixNQUFNQyxPQUFPLEdBQUdELElBQUksQ0FBQ0UsSUFBckI7QUFDQSxNQUFNQyxFQUFFLGFBQU1GLE9BQU8sQ0FBQ0csS0FBUixDQUFjLEdBQWQsRUFBbUIsQ0FBbkIsQ0FBTixDQUFSO0FBQ0EsU0FBT0QsRUFBUDtBQUNELENBSkQ7O0FBTUEsSUFBTUUsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0wsSUFBRCxFQUFVO0FBQ3hCLE1BQU1NLFNBQVMsR0FBR04sSUFBSSxDQUFDTyxLQUF2QjtBQUNBLE1BQU1DLElBQUksYUFBTUYsU0FBUyxDQUFDRixLQUFWLENBQWdCLEdBQWhCLEVBQXFCLENBQXJCLENBQU4sQ0FBVjtBQUNBLFNBQU9JLElBQVA7QUFDRCxDQUpEOztBQU1BLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNULElBQUQsRUFBVTtBQUM1QixNQUFNVSxZQUFZLEdBQUdWLElBQUksQ0FBQ1csS0FBMUI7QUFDQSxNQUFNQyxRQUFRLGFBQU1GLFlBQVksQ0FBQ0csS0FBYixDQUFtQixDQUFuQixFQUFzQixDQUF0QixDQUFOLENBQWQ7QUFDQSxTQUFPRCxRQUFQO0FBQ0QsQ0FKRDs7QUFNQSxJQUFNRSxhQUFhLEdBQUcsU0FBaEJBLGFBQWdCLEdBQU07QUFDMUIsTUFBTUMsSUFBSSxHQUFHLElBQUlDLElBQUosR0FBV0MsV0FBWCxFQUFiO0FBQ0EsU0FBT0YsSUFBUDtBQUNELENBSEQ7O0FBS0EsSUFBTUcsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQWxCLElBQUk7QUFBQSxTQUFJQSxJQUFJLENBQUNFLElBQVQ7QUFBQSxDQUFuQjs7QUFDQSxJQUFNaUIsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQW5CLElBQUk7QUFBQSxTQUFJQSxJQUFJLENBQUNvQixJQUFUO0FBQUEsQ0FBcEI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQXJCLElBQUk7QUFBQSxTQUFJQSxJQUFJLENBQUNPLEtBQVQ7QUFBQSxDQUFyQjs7QUFHQSxJQUFNZSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFDdEIsSUFBRCxFQUFVO0FBQ3pCLE1BQU11QixPQUFPLEdBQUc7QUFDZHBCLElBQUFBLEVBQUUsRUFBRUosS0FBSyxDQUFDQyxJQUFELENBREs7QUFFZFEsSUFBQUEsSUFBSSxFQUFFSCxPQUFPLENBQUNMLElBQUQsQ0FGQztBQUdkd0IsSUFBQUEsR0FBRyxFQUFFTixNQUFNLENBQUNsQixJQUFELENBSEc7QUFJZG9CLElBQUFBLElBQUksRUFBRUQsT0FBTyxDQUFDbkIsSUFBRCxDQUpDO0FBS2R5QixJQUFBQSxnQkFBZ0IsRUFBRWhCLFdBQVcsQ0FBQ1QsSUFBRCxDQUxmO0FBTWRPLElBQUFBLEtBQUssRUFBRWMsUUFBUSxDQUFDckIsSUFBRCxDQU5EO0FBT2QwQixJQUFBQSxTQUFTLEVBQUVaLGFBQWE7QUFQVixHQUFoQjtBQVNBLFNBQU9TLE9BQVA7QUFDRCxDQVhELEMsQ0FZQTs7O0FBRUFJLGlCQUFTQyxPQUFULENBQWlCLFVBQUM1QixJQUFELEVBQVU7QUFDekIsTUFBTTZCLFFBQVEsR0FBR1AsUUFBUSxDQUFDdEIsSUFBRCxDQUF6QjtBQUVBQSxFQUFBQSxJQUFJLENBQUM4QixJQUFMLENBQVVGLE9BQVYsQ0FBa0IsVUFBQ0UsSUFBRCxFQUFVO0FBQzFCLFFBQU1DLElBQUksR0FBR0MsSUFBSSxDQUFDQyxTQUFMLENBQWVKLFFBQWYsRUFBeUIsSUFBekIsRUFBK0IsQ0FBL0IsQ0FBYjs7QUFFQUssbUJBQUdDLGFBQUgsbUJBQTRCTCxJQUE1QixZQUF5Q0MsSUFBekMsRUFBK0MsVUFBQ0ssR0FBRCxFQUFTO0FBQ3RELFVBQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1YsS0FGRDtBQUdELEdBTkQ7QUFPRCxDQVZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9wYW51cG9uZy9Eb2N1bWVudHMvR2l0SHViL2dhZW1zdGVhbSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XG5pbXBvcnQgZ2FtZUpTT04gZnJvbSAnLi9nYW1lJztcblxuY29uc3QgZ2V0aWQgPSAoZ2FtZSkgPT4ge1xuICBjb25zdCBpZHNwbGl0ID0gZ2FtZS5saW5rO1xuICBjb25zdCBpZCA9IGAke2lkc3BsaXQuc3BsaXQoJy8nKVs0XX1gO1xuICByZXR1cm4gaWQ7XG59O1xuXG5jb25zdCBnZXRob3N0ID0gKGdhbWUpID0+IHtcbiAgY29uc3QgaG9zdHNwbGl0ID0gZ2FtZS5pbWFnZTtcbiAgY29uc3QgaG9zdCA9IGAke2hvc3RzcGxpdC5zcGxpdCgnLycpWzNdfWA7XG4gIHJldHVybiBob3N0O1xufTtcblxuY29uc3QgZ2V0ZGlzY291bnQgPSAoZ2FtZSkgPT4ge1xuICBjb25zdCBkaXNjb3VudHNsaXQgPSBnYW1lLnRpdGxlO1xuICBjb25zdCBkaXNjb3VudCA9IGAke2Rpc2NvdW50c2xpdC5zbGljZSg1LCA3KX1gO1xuICByZXR1cm4gZGlzY291bnQ7XG59O1xuXG5jb25zdCBnZXR1cGRhdGV0aW1lID0gKCkgPT4ge1xuICBjb25zdCB0aW1lID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICByZXR1cm4gdGltZTtcbn07XG5cbmNvbnN0IGdldHVybCA9IGdhbWUgPT4gZ2FtZS5saW5rO1xuY29uc3QgZ2V0bmFtZSA9IGdhbWUgPT4gZ2FtZS5uYW1lO1xuY29uc3QgZ2V0aW1hZ2UgPSBnYW1lID0+IGdhbWUuaW1hZ2U7XG5cblxuY29uc3QgY3JlYXRvYmogPSAoZ2FtZSkgPT4ge1xuICBjb25zdCBnYW1lb2JqID0ge1xuICAgIGlkOiBnZXRpZChnYW1lKSxcbiAgICBob3N0OiBnZXRob3N0KGdhbWUpLFxuICAgIHVybDogZ2V0dXJsKGdhbWUpLFxuICAgIG5hbWU6IGdldG5hbWUoZ2FtZSksXG4gICAgZGlzY291bnRfcGVyY2VudDogZ2V0ZGlzY291bnQoZ2FtZSksXG4gICAgaW1hZ2U6IGdldGltYWdlKGdhbWUpLFxuICAgIHVwZGF0ZV9hdDogZ2V0dXBkYXRldGltZSgpLFxuICB9O1xuICByZXR1cm4gZ2FtZW9iajtcbn07XG4vLyBjb25zb2xlLmxvZyhjcmVhdG9iaigpKTtcblxuZ2FtZUpTT04uZm9yRWFjaCgoZ2FtZSkgPT4ge1xuICBjb25zdCBnYW1lbGlzdCA9IGNyZWF0b2JqKGdhbWUpO1xuXG4gIGdhbWUudGFncy5mb3JFYWNoKCh0YWdzKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IEpTT04uc3RyaW5naWZ5KGdhbWVsaXN0LCBudWxsLCAyKTtcblxuICAgIGZzLndyaXRlRmlsZVN5bmMoYGdhbWV0YWcvJHt0YWdzfS5qc29uYCwgZGF0YSwgKGVycikgPT4ge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getid",
        "game",
        "idsplit",
        "link",
        "id",
        "split",
        "gethost",
        "hostsplit",
        "image",
        "host",
        "getdiscount",
        "discountslit",
        "title",
        "discount",
        "slice",
        "getupdatetime",
        "time",
        "Date",
        "toISOString",
        "geturl",
        "getname",
        "name",
        "getimage",
        "creatobj",
        "gameobj",
        "url",
        "discount_percent",
        "update_at",
        "gameJSON",
        "forEach",
        "gamelist",
        "tags",
        "data",
        "JSON",
        "stringify",
        "fs",
        "writeFileSync",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtB,MAAMC,OAAO,GAAGD,IAAI,CAACE,IAArB;AACA,MAAMC,EAAE,aAAMF,OAAO,CAACG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAN,CAAR;AACA,SAAOD,EAAP;AACD,CAJD;;AAMA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACL,IAAD,EAAU;AACxB,MAAMM,SAAS,GAAGN,IAAI,CAACO,KAAvB;AACA,MAAMC,IAAI,aAAMF,SAAS,CAACF,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAN,CAAV;AACA,SAAOI,IAAP;AACD,CAJD;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACT,IAAD,EAAU;AAC5B,MAAMU,YAAY,GAAGV,IAAI,CAACW,KAA1B;AACA,MAAMC,QAAQ,aAAMF,YAAY,CAACG,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAN,CAAd;AACA,SAAOD,QAAP;AACD,CAJD;;AAMA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,SAAOF,IAAP;AACD,CAHD;;AAKA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAAlB,IAAI;AAAA,SAAIA,IAAI,CAACE,IAAT;AAAA,CAAnB;;AACA,IAAMiB,OAAO,GAAG,SAAVA,OAAU,CAAAnB,IAAI;AAAA,SAAIA,IAAI,CAACoB,IAAT;AAAA,CAApB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAArB,IAAI;AAAA,SAAIA,IAAI,CAACO,KAAT;AAAA,CAArB;;AAGA,IAAMe,QAAQ,GAAG,SAAXA,QAAW,CAACtB,IAAD,EAAU;AACzB,MAAMuB,OAAO,GAAG;AACdpB,IAAAA,EAAE,EAAEJ,KAAK,CAACC,IAAD,CADK;AAEdQ,IAAAA,IAAI,EAAEH,OAAO,CAACL,IAAD,CAFC;AAGdwB,IAAAA,GAAG,EAAEN,MAAM,CAAClB,IAAD,CAHG;AAIdoB,IAAAA,IAAI,EAAED,OAAO,CAACnB,IAAD,CAJC;AAKdyB,IAAAA,gBAAgB,EAAEhB,WAAW,CAACT,IAAD,CALf;AAMdO,IAAAA,KAAK,EAAEc,QAAQ,CAACrB,IAAD,CAND;AAOd0B,IAAAA,SAAS,EAAEZ,aAAa;AAPV,GAAhB;AASA,SAAOS,OAAP;AACD,CAXD,C,CAYA;;;AAEAI,iBAASC,OAAT,CAAiB,UAAC5B,IAAD,EAAU;AACzB,MAAM6B,QAAQ,GAAGP,QAAQ,CAACtB,IAAD,CAAzB;AAEAA,EAAAA,IAAI,CAAC8B,IAAL,CAAUF,OAAV,CAAkB,UAACE,IAAD,EAAU;AAC1B,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeJ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAb;;AAEAK,mBAAGC,aAAH,mBAA4BL,IAA5B,YAAyCC,IAAzC,EAA+C,UAACK,GAAD,EAAS;AACtD,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,KAFD;AAGD,GAND;AAOD,CAVD",
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourcesContent": [
        "import fs from 'fs';\nimport gameJSON from './game';\n\nconst getid = (game) => {\n  const idsplit = game.link;\n  const id = `${idsplit.split('/')[4]}`;\n  return id;\n};\n\nconst gethost = (game) => {\n  const hostsplit = game.image;\n  const host = `${hostsplit.split('/')[3]}`;\n  return host;\n};\n\nconst getdiscount = (game) => {\n  const discountslit = game.title;\n  const discount = `${discountslit.slice(5, 7)}`;\n  return discount;\n};\n\nconst getupdatetime = () => {\n  const time = new Date().toISOString();\n  return time;\n};\n\nconst geturl = game => game.link;\nconst getname = game => game.name;\nconst getimage = game => game.image;\n\n\nconst creatobj = (game) => {\n  const gameobj = {\n    id: getid(game),\n    host: gethost(game),\n    url: geturl(game),\n    name: getname(game),\n    discount_percent: getdiscount(game),\n    image: getimage(game),\n    update_at: getupdatetime(),\n  };\n  return gameobj;\n};\n// console.log(creatobj());\n\ngameJSON.forEach((game) => {\n  const gamelist = creatobj(game);\n\n  game.tags.forEach((tags) => {\n    const data = JSON.stringify(gamelist, null, 2);\n\n    fs.writeFileSync(`gametag/${tags}.json`, data, (err) => {\n      if (err) throw err;\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557387490133
  }
}