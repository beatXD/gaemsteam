{
  "{\"sourceRoot\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"filename\":\"/Users/panupong/Documents/GitHub/gaemsteam/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/panupong/Documents/GitHub/gaemsteam\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/panupong/Documents/GitHub/gaemsteam",
      "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/panupong/Documents/GitHub/gaemsteam/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nvar _game = _interopRequireDefault(require(\"./game\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar getid = function getid(game) {\n  var id = \"\".concat(game.link.split('/')[4]);\n  return id;\n};\n\nvar gethost = function gethost(game) {\n  var hostsearch = game.link.search('steam');\n  var host = game.link.substr(hostsearch, 5);\n  return host;\n};\n\nvar getdiscount = function getdiscount(game) {\n  var discount = \"\".concat(game.title.slice(5, 7));\n  return discount;\n};\n\nvar getupdatetime = function getupdatetime() {\n  var time = new Date().toISOString();\n  return time;\n};\n\nvar geturl = function geturl(game) {\n  return game.link;\n};\n\nvar getname = function getname(game) {\n  return game.name;\n};\n\nvar getimage = function getimage(game) {\n  return game.image;\n};\n\nvar createobj = function createobj(game) {\n  var gameobj = {\n    id: getid(game),\n    host: gethost(game),\n    url: geturl(game),\n    name: getname(game),\n    discount_percent: getdiscount(game),\n    image: getimage(game),\n    update_at: getupdatetime()\n  };\n  return gameobj;\n};\n\n_game[\"default\"].forEach(function (game) {\n  game.tags.forEach(function (tags) {\n    if (tags === '+') {\n      return;\n    }\n\n    var filter = _game[\"default\"].filter(function (Games) {\n      return Games.tags.includes(tags);\n    });\n\n    var filtermap = filter.map(function (games) {\n      return createobj(games);\n    });\n    var data = JSON.stringify(filtermap, null, 2);\n\n    _fs[\"default\"].writeFileSync(\"gametag/\".concat(tags, \".json\"), null, function (err) {\n      if (err) throw err;\n    }); // fs.appendFile(`gametag/${tags}.json`, (data), (err) => {\n    //   if (err) throw err;\n    // });\n\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldGlkIiwiZ2FtZSIsImlkIiwibGluayIsInNwbGl0IiwiZ2V0aG9zdCIsImhvc3RzZWFyY2giLCJzZWFyY2giLCJob3N0Iiwic3Vic3RyIiwiZ2V0ZGlzY291bnQiLCJkaXNjb3VudCIsInRpdGxlIiwic2xpY2UiLCJnZXR1cGRhdGV0aW1lIiwidGltZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImdldHVybCIsImdldG5hbWUiLCJuYW1lIiwiZ2V0aW1hZ2UiLCJpbWFnZSIsImNyZWF0ZW9iaiIsImdhbWVvYmoiLCJ1cmwiLCJkaXNjb3VudF9wZXJjZW50IiwidXBkYXRlX2F0IiwiZ2FtZUpTT04iLCJmb3JFYWNoIiwidGFncyIsImZpbHRlciIsIkdhbWVzIiwiaW5jbHVkZXMiLCJmaWx0ZXJtYXAiLCJtYXAiLCJnYW1lcyIsImRhdGEiLCJKU09OIiwic3RyaW5naWZ5IiwiZnMiLCJ3cml0ZUZpbGVTeW5jIiwiZXJyIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQ0MsSUFBRCxFQUFVO0FBQ3RCLE1BQU1DLEVBQUUsYUFBTUQsSUFBSSxDQUFDRSxJQUFMLENBQVVDLEtBQVYsQ0FBZ0IsR0FBaEIsRUFBcUIsQ0FBckIsQ0FBTixDQUFSO0FBQ0EsU0FBT0YsRUFBUDtBQUNELENBSEQ7O0FBS0EsSUFBTUcsT0FBTyxHQUFHLFNBQVZBLE9BQVUsQ0FBQ0osSUFBRCxFQUFVO0FBQ3hCLE1BQU1LLFVBQVUsR0FBR0wsSUFBSSxDQUFDRSxJQUFMLENBQVVJLE1BQVYsQ0FBaUIsT0FBakIsQ0FBbkI7QUFDQSxNQUFNQyxJQUFJLEdBQUdQLElBQUksQ0FBQ0UsSUFBTCxDQUFVTSxNQUFWLENBQWlCSCxVQUFqQixFQUE2QixDQUE3QixDQUFiO0FBQ0EsU0FBT0UsSUFBUDtBQUNELENBSkQ7O0FBTUEsSUFBTUUsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ1QsSUFBRCxFQUFVO0FBQzVCLE1BQU1VLFFBQVEsYUFBTVYsSUFBSSxDQUFDVyxLQUFMLENBQVdDLEtBQVgsQ0FBaUIsQ0FBakIsRUFBb0IsQ0FBcEIsQ0FBTixDQUFkO0FBQ0EsU0FBT0YsUUFBUDtBQUNELENBSEQ7O0FBS0EsSUFBTUcsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixHQUFNO0FBQzFCLE1BQU1DLElBQUksR0FBRyxJQUFJQyxJQUFKLEdBQVdDLFdBQVgsRUFBYjtBQUNBLFNBQU9GLElBQVA7QUFDRCxDQUhEOztBQUtBLElBQU1HLE1BQU0sR0FBRyxTQUFUQSxNQUFTLENBQUFqQixJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDRSxJQUFUO0FBQUEsQ0FBbkI7O0FBQ0EsSUFBTWdCLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUFsQixJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDbUIsSUFBVDtBQUFBLENBQXBCOztBQUNBLElBQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUFwQixJQUFJO0FBQUEsU0FBSUEsSUFBSSxDQUFDcUIsS0FBVDtBQUFBLENBQXJCOztBQUdBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZLENBQUN0QixJQUFELEVBQVU7QUFDMUIsTUFBTXVCLE9BQU8sR0FBRztBQUNkdEIsSUFBQUEsRUFBRSxFQUFFRixLQUFLLENBQUNDLElBQUQsQ0FESztBQUVkTyxJQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0osSUFBRCxDQUZDO0FBR2R3QixJQUFBQSxHQUFHLEVBQUVQLE1BQU0sQ0FBQ2pCLElBQUQsQ0FIRztBQUlkbUIsSUFBQUEsSUFBSSxFQUFFRCxPQUFPLENBQUNsQixJQUFELENBSkM7QUFLZHlCLElBQUFBLGdCQUFnQixFQUFFaEIsV0FBVyxDQUFDVCxJQUFELENBTGY7QUFNZHFCLElBQUFBLEtBQUssRUFBRUQsUUFBUSxDQUFDcEIsSUFBRCxDQU5EO0FBT2QwQixJQUFBQSxTQUFTLEVBQUViLGFBQWE7QUFQVixHQUFoQjtBQVNBLFNBQU9VLE9BQVA7QUFDRCxDQVhEOztBQWFBSSxpQkFBU0MsT0FBVCxDQUFpQixVQUFDNUIsSUFBRCxFQUFVO0FBQ3pCQSxFQUFBQSxJQUFJLENBQUM2QixJQUFMLENBQVVELE9BQVYsQ0FBa0IsVUFBQ0MsSUFBRCxFQUFVO0FBQzFCLFFBQUlBLElBQUksS0FBSyxHQUFiLEVBQWtCO0FBQ2hCO0FBQ0Q7O0FBQ0QsUUFBTUMsTUFBTSxHQUFHSCxpQkFBU0csTUFBVCxDQUFnQixVQUFBQyxLQUFLO0FBQUEsYUFBSUEsS0FBSyxDQUFDRixJQUFOLENBQVdHLFFBQVgsQ0FBb0JILElBQXBCLENBQUo7QUFBQSxLQUFyQixDQUFmOztBQUNBLFFBQU1JLFNBQVMsR0FBR0gsTUFBTSxDQUFDSSxHQUFQLENBQVcsVUFBQUMsS0FBSztBQUFBLGFBQUliLFNBQVMsQ0FBQ2EsS0FBRCxDQUFiO0FBQUEsS0FBaEIsQ0FBbEI7QUFDQSxRQUFNQyxJQUFJLEdBQUdDLElBQUksQ0FBQ0MsU0FBTCxDQUFlTCxTQUFmLEVBQTBCLElBQTFCLEVBQWdDLENBQWhDLENBQWI7O0FBQ0FNLG1CQUFHQyxhQUFILG1CQUE0QlgsSUFBNUIsWUFBMEMsSUFBMUMsRUFBaUQsVUFBQ1ksR0FBRCxFQUFTO0FBQ3hELFVBQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1YsS0FGRCxFQVAwQixDQVUxQjtBQUNBO0FBQ0E7O0FBQ0QsR0FiRDtBQWNELENBZkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL3BhbnVwb25nL0RvY3VtZW50cy9HaXRIdWIvZ2FlbXN0ZWFtIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcbmltcG9ydCBnYW1lSlNPTiBmcm9tICcuL2dhbWUnO1xuXG5jb25zdCBnZXRpZCA9IChnYW1lKSA9PiB7XG4gIGNvbnN0IGlkID0gYCR7Z2FtZS5saW5rLnNwbGl0KCcvJylbNF19YDtcbiAgcmV0dXJuIGlkO1xufTtcblxuY29uc3QgZ2V0aG9zdCA9IChnYW1lKSA9PiB7XG4gIGNvbnN0IGhvc3RzZWFyY2ggPSBnYW1lLmxpbmsuc2VhcmNoKCdzdGVhbScpO1xuICBjb25zdCBob3N0ID0gZ2FtZS5saW5rLnN1YnN0cihob3N0c2VhcmNoLCA1KTtcbiAgcmV0dXJuIGhvc3Q7XG59O1xuXG5jb25zdCBnZXRkaXNjb3VudCA9IChnYW1lKSA9PiB7XG4gIGNvbnN0IGRpc2NvdW50ID0gYCR7Z2FtZS50aXRsZS5zbGljZSg1LCA3KX1gO1xuICByZXR1cm4gZGlzY291bnQ7XG59O1xuXG5jb25zdCBnZXR1cGRhdGV0aW1lID0gKCkgPT4ge1xuICBjb25zdCB0aW1lID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICByZXR1cm4gdGltZTtcbn07XG5cbmNvbnN0IGdldHVybCA9IGdhbWUgPT4gZ2FtZS5saW5rO1xuY29uc3QgZ2V0bmFtZSA9IGdhbWUgPT4gZ2FtZS5uYW1lO1xuY29uc3QgZ2V0aW1hZ2UgPSBnYW1lID0+IGdhbWUuaW1hZ2U7XG5cblxuY29uc3QgY3JlYXRlb2JqID0gKGdhbWUpID0+IHtcbiAgY29uc3QgZ2FtZW9iaiA9IHtcbiAgICBpZDogZ2V0aWQoZ2FtZSksXG4gICAgaG9zdDogZ2V0aG9zdChnYW1lKSxcbiAgICB1cmw6IGdldHVybChnYW1lKSxcbiAgICBuYW1lOiBnZXRuYW1lKGdhbWUpLFxuICAgIGRpc2NvdW50X3BlcmNlbnQ6IGdldGRpc2NvdW50KGdhbWUpLFxuICAgIGltYWdlOiBnZXRpbWFnZShnYW1lKSxcbiAgICB1cGRhdGVfYXQ6IGdldHVwZGF0ZXRpbWUoKSxcbiAgfTtcbiAgcmV0dXJuIGdhbWVvYmo7XG59O1xuXG5nYW1lSlNPTi5mb3JFYWNoKChnYW1lKSA9PiB7XG4gIGdhbWUudGFncy5mb3JFYWNoKCh0YWdzKSA9PiB7XG4gICAgaWYgKHRhZ3MgPT09ICcrJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBmaWx0ZXIgPSBnYW1lSlNPTi5maWx0ZXIoR2FtZXMgPT4gR2FtZXMudGFncy5pbmNsdWRlcyh0YWdzKSk7XG4gICAgY29uc3QgZmlsdGVybWFwID0gZmlsdGVyLm1hcChnYW1lcyA9PiBjcmVhdGVvYmooZ2FtZXMpKTtcbiAgICBjb25zdCBkYXRhID0gSlNPTi5zdHJpbmdpZnkoZmlsdGVybWFwLCBudWxsLCAyKTtcbiAgICBmcy53cml0ZUZpbGVTeW5jKGBnYW1ldGFnLyR7dGFnc30uanNvbmAsIChudWxsKSwgKGVycikgPT4ge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgIH0pO1xuICAgIC8vIGZzLmFwcGVuZEZpbGUoYGdhbWV0YWcvJHt0YWdzfS5qc29uYCwgKGRhdGEpLCAoZXJyKSA9PiB7XG4gICAgLy8gICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgLy8gfSk7XG4gIH0pO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "getid",
        "game",
        "id",
        "link",
        "split",
        "gethost",
        "hostsearch",
        "search",
        "host",
        "substr",
        "getdiscount",
        "discount",
        "title",
        "slice",
        "getupdatetime",
        "time",
        "Date",
        "toISOString",
        "geturl",
        "getname",
        "name",
        "getimage",
        "image",
        "createobj",
        "gameobj",
        "url",
        "discount_percent",
        "update_at",
        "gameJSON",
        "forEach",
        "tags",
        "filter",
        "Games",
        "includes",
        "filtermap",
        "map",
        "games",
        "data",
        "JSON",
        "stringify",
        "fs",
        "writeFileSync",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtB,MAAMC,EAAE,aAAMD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAN,CAAR;AACA,SAAOF,EAAP;AACD,CAHD;;AAKA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACJ,IAAD,EAAU;AACxB,MAAMK,UAAU,GAAGL,IAAI,CAACE,IAAL,CAAUI,MAAV,CAAiB,OAAjB,CAAnB;AACA,MAAMC,IAAI,GAAGP,IAAI,CAACE,IAAL,CAAUM,MAAV,CAAiBH,UAAjB,EAA6B,CAA7B,CAAb;AACA,SAAOE,IAAP;AACD,CAJD;;AAMA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACT,IAAD,EAAU;AAC5B,MAAMU,QAAQ,aAAMV,IAAI,CAACW,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAN,CAAd;AACA,SAAOF,QAAP;AACD,CAHD;;AAKA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAb;AACA,SAAOF,IAAP;AACD,CAHD;;AAKA,IAAMG,MAAM,GAAG,SAATA,MAAS,CAAAjB,IAAI;AAAA,SAAIA,IAAI,CAACE,IAAT;AAAA,CAAnB;;AACA,IAAMgB,OAAO,GAAG,SAAVA,OAAU,CAAAlB,IAAI;AAAA,SAAIA,IAAI,CAACmB,IAAT;AAAA,CAApB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAApB,IAAI;AAAA,SAAIA,IAAI,CAACqB,KAAT;AAAA,CAArB;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACtB,IAAD,EAAU;AAC1B,MAAMuB,OAAO,GAAG;AACdtB,IAAAA,EAAE,EAAEF,KAAK,CAACC,IAAD,CADK;AAEdO,IAAAA,IAAI,EAAEH,OAAO,CAACJ,IAAD,CAFC;AAGdwB,IAAAA,GAAG,EAAEP,MAAM,CAACjB,IAAD,CAHG;AAIdmB,IAAAA,IAAI,EAAED,OAAO,CAAClB,IAAD,CAJC;AAKdyB,IAAAA,gBAAgB,EAAEhB,WAAW,CAACT,IAAD,CALf;AAMdqB,IAAAA,KAAK,EAAED,QAAQ,CAACpB,IAAD,CAND;AAOd0B,IAAAA,SAAS,EAAEb,aAAa;AAPV,GAAhB;AASA,SAAOU,OAAP;AACD,CAXD;;AAaAI,iBAASC,OAAT,CAAiB,UAAC5B,IAAD,EAAU;AACzBA,EAAAA,IAAI,CAAC6B,IAAL,CAAUD,OAAV,CAAkB,UAACC,IAAD,EAAU;AAC1B,QAAIA,IAAI,KAAK,GAAb,EAAkB;AAChB;AACD;;AACD,QAAMC,MAAM,GAAGH,iBAASG,MAAT,CAAgB,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACF,IAAN,CAAWG,QAAX,CAAoBH,IAApB,CAAJ;AAAA,KAArB,CAAf;;AACA,QAAMI,SAAS,GAAGH,MAAM,CAACI,GAAP,CAAW,UAAAC,KAAK;AAAA,aAAIb,SAAS,CAACa,KAAD,CAAb;AAAA,KAAhB,CAAlB;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeL,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAAb;;AACAM,mBAAGC,aAAH,mBAA4BX,IAA5B,YAA0C,IAA1C,EAAiD,UAACY,GAAD,EAAS;AACxD,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,KAFD,EAP0B,CAU1B;AACA;AACA;;AACD,GAbD;AAcD,CAfD",
      "sourceRoot": "/Users/panupong/Documents/GitHub/gaemsteam",
      "sourcesContent": [
        "import fs from 'fs';\nimport gameJSON from './game';\n\nconst getid = (game) => {\n  const id = `${game.link.split('/')[4]}`;\n  return id;\n};\n\nconst gethost = (game) => {\n  const hostsearch = game.link.search('steam');\n  const host = game.link.substr(hostsearch, 5);\n  return host;\n};\n\nconst getdiscount = (game) => {\n  const discount = `${game.title.slice(5, 7)}`;\n  return discount;\n};\n\nconst getupdatetime = () => {\n  const time = new Date().toISOString();\n  return time;\n};\n\nconst geturl = game => game.link;\nconst getname = game => game.name;\nconst getimage = game => game.image;\n\n\nconst createobj = (game) => {\n  const gameobj = {\n    id: getid(game),\n    host: gethost(game),\n    url: geturl(game),\n    name: getname(game),\n    discount_percent: getdiscount(game),\n    image: getimage(game),\n    update_at: getupdatetime(),\n  };\n  return gameobj;\n};\n\ngameJSON.forEach((game) => {\n  game.tags.forEach((tags) => {\n    if (tags === '+') {\n      return;\n    }\n    const filter = gameJSON.filter(Games => Games.tags.includes(tags));\n    const filtermap = filter.map(games => createobj(games));\n    const data = JSON.stringify(filtermap, null, 2);\n    fs.writeFileSync(`gametag/${tags}.json`, (null), (err) => {\n      if (err) throw err;\n    });\n    // fs.appendFile(`gametag/${tags}.json`, (data), (err) => {\n    //   if (err) throw err;\n    // });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1557459875241
  }
}